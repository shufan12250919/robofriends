{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","cardComponent","robots","map","user","Scroll","style","overflowY","border","height","children","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAACC,GACZ,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,cACpB,gCACE,6BAAKJ,EAAMK,OACX,kCAAKL,EAAMM,gBCMJC,EAXE,SAAC,GAAa,IACvBC,EADsB,EAAXC,OACYC,KAAI,SAACC,GAChC,OAAO,cAAC,EAAD,CAAoBP,GAAIO,EAAKP,GAAIC,KAAMM,EAAKN,KAAMC,MAAOK,EAAKL,OAAnDK,EAAKP,OAEzB,OACE,8BACGI,KCCQI,EARA,SAACZ,GACd,OACE,qBAAKa,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACChB,EAAMiB,YCUIC,EAZG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAClB,OACE,qBAAKlB,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVmB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OC0CCI,G,wDA3Cb,aAAc,IAAD,8BACX,gBAiBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAjBzC,EAAKC,MAAQ,CACXrB,OAAQ,GACRkB,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAACjB,OAAQ0B,S,oBAQ3B,WAAS,IAAD,OACAC,EAAiBC,KAAKP,MAAMrB,OAAO6B,QAAO,SAAAC,GAC9C,OAAOA,EAAMlC,KAAKmC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAGlE,OAAgC,IAA7BH,KAAKP,MAAMrB,OAAOiC,OACZ,2CAIT,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWkB,aAAekB,KAAKb,iBAC/B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUf,OAAQ2B,a,GArCRO,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7a100a7b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) =>{\n  return (\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robot' src={`https://robohash.org/${props.id}?200x200`} />\n      <div>\n        <h2>{props.name}</h2>\n        <p>j{props.email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({robots}) =>{\n  const cardComponent = robots.map((user) =>{\n    return <Card key={user.id} id={user.id} name={user.name} email={user.email}/>\n  })\n  return (\n    <div>\n      {cardComponent}\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from 'react'\n\nconst Scroll = (props)=>{\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n    {props.children}\n    </div>\n  )\n}\n\nexport default Scroll;\n","import React from 'react'\n\n\nconst SearchBox = ({searchChange}) =>{\n  return (\n    <div className=\"pa2\">\n    <input\n    className=\"pa3 ba b--green bg-lightest-blue\"\n    type='search'\n    placeholder='search robots'\n    onChange={searchChange} />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React, {Component} from 'react';\nimport CardList from '../components/CardList'\n//import {robots} from './robots'\nimport Scroll from '../components/Scroll'\nimport SearchBox from '../components/SearchBox'\nimport './App.css'\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\"\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>{\n      return response.json();\n    })\n    .then(users =>{\n      this.setState({robots: users})\n    })\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n\n  render(){\n    const filteredRobots = this.state.robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n\n    if(this.state.robots.length === 0){\n      return <h1> Loading </h1>\n    }\n\n    return (\n    <div className=\"tc\">\n      <h1 className=\"f1\"> RoboFriends</h1>\n      <SearchBox searchChange= {this.onSearchChange}/>\n      <Scroll>\n        <CardList robots={filteredRobots}/>\n      </Scroll>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}